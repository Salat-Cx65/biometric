/*
 *  Copyright (c) 2021 Sergey Komlach aka Salat-Cx65; Original project: https://github.com/Salat-Cx65/AdvancedBiometricPromptCompat
 *  All rights reserved.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
android {
    //compileSdkPreview compileSDK
    compileSdkVersion compileSDK

    defaultConfig {
        applicationId "dev.skomlach.biometric.app"
        minSdkVersion minSDK
        //targetSdkPreview targetSDK
        targetSdkVersion targetSDK
        versionCode libsMinorVersion
        versionName libsMajorVersion
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }
    kotlinOptions {
        jvmTarget = javaVersion.toString()
    }
    buildFeatures {
        viewBinding true
    }
    namespace 'dev.skomlach.biometric.app'
}

dependencies {
    implementation project(":" + libArtifactId_common)
    implementation project(":" + libArtifactId_biometric)
//"dev.skomlach:biometric:${libsMajorVersion + "." + libsMinorVersion}"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.8.0-alpha01'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
    implementation 'org.smali:dexlib2:2.5.2'

    //DevTools
    //ANR's
    implementation "com.github.anrwatchdog:anrwatchdog:1.4.0"
    //memory leaks
    implementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'

    implementation platform('com.google.firebase:firebase-bom:29.0.3')
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-crashlytics-ndk'
}

afterEvaluate {
    android.applicationVariants.all { v ->
        v.assemble.finalizedBy(copyApk)
    }
}
task copyApk(type: Copy) {
    from "$buildDir/outputs/apk/debug/"
    into "$projectDir/"
    include '*.apk'
}